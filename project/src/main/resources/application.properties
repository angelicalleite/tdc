# Guide for configuration application-properties
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
spring.application.name=api-taxonomy-hierarchy

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/sibbr_taxonomy_integration
spring.datasource.username=postgres
spring.datasource.password=admin

spring.datasource.secundary.driverClassName=org.postgresql.Driver
spring.datasource.secundary.url=jdbc:postgresql://localhost:5432/sibbr_taxonomy
spring.datasource.secundary.username=postgres
spring.datasource.secundary.password=admin

# Config character encoding tables and database
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.collationConnection=utf8_bin

# Hibernate Properties Dialect Postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate Properties Dialect Autodetect
# spring.jpa.database=default

# Hibernate Naming Strategy [Formatt name tables]
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.DefaultNamingStrategy

# Type strategy of naming of tables
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl

# Hidden loggers sql, generate tables and format sql
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# Connection datasources by jndi example
# spring.datasource.jndi-name = java:/jdbc/host/app

# Remover antes de adiciona-los ao gerenciador de entidade
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# [.. MULTIPART FILEUPLOAD ..]

# Enable multipart uploads
spring.http.multipart.enabled=true
# Threshold after which files are written to disk.
spring.http.multipart.file-size-threshold=2KB
# Max file size.
spring.http.multipart.max-file-size=500KB
# Max Request Size
spring.http.multipart.max-request-size=500KB




# [.. DEVTOOLS ..]

# Autoload serve
# spring.devtools.restart.enabled=true

# [.. CONFIGURAÇÃOO ..]

# Active mode debug
debug=false

# Port of acsess aplication
server.port=9001

# Path root
server.contextPath=/integration
#server.error.whitelabel.enabled=false

# [.. CONSOLE OUT ..]
spring.main.banner-mode=off

# [.. LOGGER DEV ..]
#logging.level.root=ERROR
#logging.level.org.springframework.web=DEBUG
#logging.level.com.bytestree.restful=DEBUG
#logging.level.org.hibernate.SQL=ERROR

# [.. LOGGER PROD ..]

# level logging for plataform
logging.level.root=ERROR
logging.level.org.springframework.web=ERROR
logging.level.com.bytestree.restful=ERROR
# logging.level.org.hibernate.SQL=ERROR

# Config patterns message logger for console and file
# Logging pattern for the console
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Logging pattern for file
# logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Path save file logger
# logging.file=./log/taxonomy_debbug.log